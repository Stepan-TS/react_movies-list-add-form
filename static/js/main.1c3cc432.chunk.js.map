{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","helpers/index.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","isValidUrl","url","test","TextField","name","value","_ref$isValid","isValid","_ref$label","label","_ref$required","required","_ref$onChange","onChange","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setToched","hasError","htmlFor","classNames","type","placeholder","event","target","onBlur","trim","NewMovie","props","onAdd","_useState2","count","setCount","setTitle","_useState5","_useState6","setDescription","_useState7","_useState8","setImgUrl","_useState9","_useState10","setImdbUrl","_useState11","_useState12","setImdbId","createdNewMovie","isAddButtonActive","onSubmit","preventDefault","prev","disabled","App","moviesFromServer","setMovies","newMovie","prevMovies","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1c3cc432.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","export const isValidUrl = (url: string) => {\n  // eslint-disable-next-line max-len\n  const pattern = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n\n  return pattern.test(url);\n};\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  isValid?: boolean,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  isValid = true,\n  label = name,\n  required = false,\n  onChange = () => {},\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n\n  const [touched, setToched] = useState(false);\n  const hasError = (touched && required && !value)\n    || (touched && required && !isValid);\n\n  const handleBlur = (event: React.FocusEvent<HTMLInputElement, Element>) => {\n    onChange(event.target.value.trim());\n    setToched(true);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onChange(event.target.value)}\n          onBlur={handleBlur}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">\n\n          {isValid\n            ? `${label} is required`\n            : 'Invalid url!'}\n        </p>\n      )}\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { isValidUrl } from '../../helpers';\nimport { Movie } from '../../types/Movie';\nimport { TextField } from '../TextField';\n\ntype Props = {\n  onAdd: (newMovie: Movie) => void;\n};\n\nexport const NewMovie: React.FC<Props> = (props) => {\n  const { onAdd } = props;\n\n  const [count, setCount] = useState(0);\n\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n\n  const createdNewMovie = {\n    title,\n    description,\n    imgUrl,\n    imdbUrl,\n    imdbId,\n  };\n\n  const clearFields = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleSubmitForm = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    onAdd(createdNewMovie);\n    setCount(prev => (prev + 1));\n\n    clearFields();\n  };\n\n  const isAddButtonActive = title\n     && isValidUrl(imgUrl)\n       && isValidUrl(imdbUrl)\n         && imdbId;\n\n  return (\n    <form\n      className=\"NewMovie\"\n      key={count}\n      onSubmit={handleSubmitForm}\n    >\n      <h2 className=\"title\">Add a movie</h2>\n\n      <TextField\n        name=\"title\"\n        label=\"Title\"\n        value={title}\n        onChange={setTitle}\n        required\n      />\n\n      <TextField\n        name=\"description\"\n        label=\"Description\"\n        value={description}\n        onChange={setDescription}\n      />\n\n      <TextField\n        name=\"imgUrl\"\n        label=\"Image URL\"\n        isValid={isValidUrl(imgUrl)}\n        value={imgUrl}\n        onChange={setImgUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbUrl\"\n        label=\"Imdb URL\"\n        isValid={isValidUrl(imdbUrl)}\n        value={imdbUrl}\n        onChange={setImdbUrl}\n        required\n      />\n\n      <TextField\n        name=\"imdbId\"\n        label=\"Imdb ID\"\n        value={imdbId}\n        onChange={setImdbId}\n        required\n      />\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={!isAddButtonActive}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>(moviesFromServer);\n\n  const addNewMovie = (newMovie: Movie) => {\n    setMovies(prevMovies => [...prevMovies, newMovie]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <NewMovie onAdd={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}